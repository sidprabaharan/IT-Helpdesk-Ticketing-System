@model HelpdeskTicketing.Web.Controllers.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h2>Welcome, @Model.UserName</h2>
            <p class="text-muted">Here's an overview of your @(Model.IsSupport ? "support tickets" : "tickets")</p>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">New Tickets</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.NewTickets</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-ticket-alt fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                @(Model.IsSupport ? "Assigned Tickets" : "In Progress")
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @(Model.IsSupport ? Model.AssignedTickets : Model.InProgressTickets)
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-spinner fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                @(Model.IsSupport ? "In Progress" : "Resolved")
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @(Model.IsSupport ? Model.InProgressTickets : Model.ResolvedTickets)
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tasks fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                @(Model.IsSupport ? "Resolved" : "Total Tickets")
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @(Model.IsSupport ? Model.ResolvedTickets : Model.TotalTickets)
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.IsSupport)
    {
        <!-- Performance Metrics Cards -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card shadow mb-4">
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <h6 class="m-0 font-weight-bold text-primary">Average Resolution Time</h6>
                    </div>
                    <div class="card-body">
                        <div class="pt-4 pb-2">
                            <div class="h1 text-center">@Model.AverageResolutionTime min</div>
                            <p class="text-center">Average time to resolve tickets</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card shadow mb-4">
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <h6 class="m-0 font-weight-bold text-primary">Resolved Today</h6>
                    </div>
                    <div class="card-body">
                        <div class="pt-4 pb-2">
                            <div class="h1 text-center">@Model.TicketsResolvedToday</div>
                            <p class="text-center">Tickets resolved today</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Assigned Tickets Table -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">My Assigned Tickets</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered" id="assignedTicketsTable" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Title</th>
                                        <th>Requester</th>
                                        <th>Status</th>
                                        <th>Priority</th>
                                        <th>Category</th>
                                        <th>Created</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.MyAssignedTickets.Any())
                                    {
                                        foreach (var ticket in Model.MyAssignedTickets)
                                        {
                                            <tr>
                                                <td>#@ticket.Id</td>
                                                <td>@ticket.Title</td>
                                                <td>@ticket.RequesterName</td>
                                                <td>
                                                    <span class="badge @GetStatusBadgeClass(ticket.Status)">
                                                        @ticket.Status
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="badge @GetPriorityBadgeClass(ticket.Priority)">
                                                        @ticket.Priority
                                                    </span>
                                                </td>
                                                <td>@ticket.Category</td>
                                                <td>@ticket.CreatedAt.ToString("g")</td>
                                                <td>
                                                    <a href="@Url.Action("Details", "Tickets", new { id = ticket.Id })" class="btn btn-primary btn-sm">
                                                        View
                                                    </a>
                                                    @if (ticket.Status != "Resolved" && ticket.Status != "Closed")
                                                    {
                                                        <a href="@Url.Action("Resolve", "Tickets", new { id = ticket.Id })" class="btn btn-success btn-sm">
                                                            Resolve
                                                        </a>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="8" class="text-center">No tickets are currently assigned to you.</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Tickets Table -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow mb-4">
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <h6 class="m-0 font-weight-bold text-primary">Recent Tickets</h6>
                        <a href="@Url.Action("Index", "Tickets")" class="btn btn-sm btn-primary">View All</a>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered" id="recentTicketsTable" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Title</th>
                                        <th>Requester</th>
                                        <th>Assigned To</th>
                                        <th>Status</th>
                                        <th>Priority</th>
                                        <th>Created</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ticket in Model.RecentTickets)
                                    {
                                        <tr>
                                            <td>#@ticket.Id</td>
                                            <td>@ticket.Title</td>
                                            <td>@ticket.RequesterName</td>
                                            <td>@(string.IsNullOrEmpty(ticket.AssignedToName) ? "Unassigned" : ticket.AssignedToName)</td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(ticket.Status)">
                                                    @ticket.Status
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @GetPriorityBadgeClass(ticket.Priority)">
                                                    @ticket.Priority
                                                </span>
                                            </td>
                                            <td>@ticket.CreatedAt.ToString("g")</td>
                                            <td>
                                                <a href="@Url.Action("Details", "Tickets", new { id = ticket.Id })" class="btn btn-primary btn-sm">
                                                    View
                                                </a>
                                                @if (string.IsNullOrEmpty(ticket.AssignedToName) && ticket.Status == "New")
                                                {
                                                    <a href="@Url.Action("Assign", "Tickets", new { id = ticket.Id, assignToMe = true })" class="btn btn-info btn-sm">
                                                        Assign to me
                                                    </a>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- User's Tickets Table -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow mb-4">
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <h6 class="m-0 font-weight-bold text-primary">My Tickets</h6>
                        <a href="@Url.Action("Create", "Tickets")" class="btn btn-sm btn-primary">Create New Ticket</a>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered" id="myTicketsTable" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Title</th>
                                        <th>Status</th>
                                        <th>Priority</th>
                                        <th>Category</th>
                                        <th>Assigned To</th>
                                        <th>Created</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.MyTickets.Any())
                                    {
                                        foreach (var ticket in Model.MyTickets)
                                        {
                                            <tr>
                                                <td>#@ticket.Id</td>
                                                <td>@ticket.Title</td>
                                                <td>
                                                    <span class="badge @GetStatusBadgeClass(ticket.Status)">
                                                        @ticket.Status
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="badge @GetPriorityBadgeClass(ticket.Priority)">
                                                        @ticket.Priority
                                                    </span>
                                                </td>
                                                <td>@ticket.Category</td>
  <td>@(string.IsNullOrEmpty(ticket.AssignedToName) ? "Unassigned" : ticket.AssignedToName)</td>
                                                <td>@ticket.CreatedAt.ToString("g")</td>
                                                <td>
                                                    <a href="@Url.Action("Details", "Tickets", new { id = ticket.Id })" class="btn btn-primary btn-sm">
                                                        View
                                                    </a>
                                                    @if (ticket.Status == "Resolved")
                                                    {
                                                        <button type="button" class="btn btn-success btn-sm confirm-resolution" data-ticket-id="@ticket.Id">
                                                            Confirm Resolution
                                                        </button>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="8" class="text-center">You haven't created any tickets yet.</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTables
            $('#assignedTicketsTable').DataTable();
            $('#recentTicketsTable').DataTable();
            $('#myTicketsTable').DataTable();
            
            // Handle confirm resolution buttons
            $('.confirm-resolution').click(function() {
                var ticketId = $(this).data('ticket-id');
                
                // Show confirmation dialog
                if (confirm('Are you sure this issue has been resolved? This will close the ticket.')) {
                    // Submit confirmation via AJAX
                    $.post('@Url.Action("Close", "Tickets")/' + ticketId, function(data) {
                        // Reload page on success
                        window.location.reload();
                    }).fail(function(error) {
                        alert('Failed to confirm resolution. Please try again.');
                    });
                }
            });
        });
    </script>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "New" => "badge-primary",
            "Assigned" => "badge-info",
            "InProgress" => "badge-warning",
            "OnHold" => "badge-secondary",
            "Resolved" => "badge-success",
            "Closed" => "badge-dark",
            "Reopened" => "badge-danger",
            _ => "badge-secondary"
        };
    }

    string GetPriorityBadgeClass(string priority)
    {
        return priority switch
        {
            "Low" => "badge-secondary",
            "Medium" => "badge-info",
            "High" => "badge-warning",
            "Critical" => "badge-danger",
            _ => "badge-secondary"
        };
    }
}
